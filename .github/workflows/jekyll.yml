# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get start time
        run: |
          echo "start=$(date +%s)" >> $GITHUB_ENV
          echo "startfmt=$(date --iso-8601=minutes)" >> $GITHUB_ENV

      - name: Send Slack message
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          channel-id: "C01UGQ98P9U"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text", "pretext"],
                  "fallback": ${{ toJSON(join(github.event.commits.*.message, '<br>') || ':clock6: Scheduled') }},
                  "color": "${{ env.colour || 'grey' }}",
                  "pretext": "${{ env.icon || ':checkered_flag:' }} ${{ github.workflow }} (${{ github.ref_name }}) #${{ github.run_number }}",
                  "author_name": "${{ github.triggering_actor || github.actor }}",
                  "title": "${{ github.workflow }}",
                  "title_link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": ${{ toJSON(join(github.event.commits.*.message, '\n') || ':clock6: Scheduled') }},
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress"
                    },
                    {
                      "title": "Start",
                      "short": true,
                      "value": "${{ env.startfmt }}"
                    }
                  ]
                },
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url || github.server_url }}|View commit>"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@7dc18ff0ca6e3630d3f29d2a85ebf6cc27ae9d6c # v1.177.0
        with:
          ruby-version: "3.1" # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
      - name: Get end time
        if: always()
        run: |
          echo "end=$(date +%s)" >> $GITHUB_ENV
          echo "endfmt=$(date --iso-8601=minutes)" >> $GITHUB_ENV

      - name: Get runtime difference
        if: always()
        run: echo "timediff=$(( (${{ env.end }} - ${{ env.start }})/60 )) minutes\n$(( (${{ env.end }} - ${{ env.start }})%60 )) seconds" >> $GITHUB_ENV

      - name: On failure
        if: failure()
        run: |
          echo "colour=danger" >> $GITHUB_ENV
          echo "status=Failed" >> $GITHUB_ENV
          echo "icon=ðŸ›‘" >> $GITHUB_ENV

      - name: On cancellation
        if: cancelled()
        run: |
          echo "colour=warning" >> $GITHUB_ENV
          echo "status=Cancelled" >> $GITHUB_ENV
          echo "icon=âš " >> $GITHUB_ENV

      - name: On success
        if: success()
        run: |
          echo "colour=good" >> $GITHUB_ENV
          echo "status=Completed" >> $GITHUB_ENV
          echo "icon=âœ…" >> $GITHUB_ENV

      - name: Send Slack message
        if: always()
        uses: slackapi/slack-github-action@v1.26.0
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: "C01UGQ98P9U"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text", "pretext"],
                  "fallback": ${{ toJSON(join(github.event.commits.*.message, '<br>') || ':clock6: Scheduled') }},
                  "color": "${{ env.colour || 'grey' }}",
                  "pretext": "${{ env.icon || '?' }} ${{ github.workflow }} (${{ github.ref_name }}) #${{ github.run_number }}",
                  "author_name": "${{ github.triggering_actor || github.actor }}",
                  "title": "${{ github.workflow }}",
                  "title_link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": ${{ toJSON(join(github.event.commits.*.message, '\n') || ':clock6: Scheduled') }},
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "${{ env.status }}"
                    },
                    {
                      "title": "Start",
                      "short": true,
                      "value": "${{ env.startfmt }}"
                    },
                    {
                      "title": "Run time",
                      "short": true,
                      "value": "${{ env.timediff }}"
                    },
                    {
                      "title": "End",
                      "short": true,
                      "value": "${{ env.endfmt }}"
                    }
                  ]
                },
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url || github.server_url }}|View commit>"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
