# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Create last-week's interesting post

on:
  # Runs on pushes targeting the default branch
  schedule:
    - cron: "01 14 * * 0"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  push:
    branches: ["master"]
    paths:
      - '.github/scripts/get_interesting_news.py'
      - '.github/workflows/last-week.yml'
  pull_request:
    branches: ["master"]
    paths:
      - '.github/scripts/get_interesting_news.py'
      - '.github/workflows/last-week.yml'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write
  actions: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "last-week"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Get start time
        run: |
          echo "start=$(date +%s)" >> $GITHUB_ENV
          echo "startfmt=$(date --iso-8601=minutes)" >> $GITHUB_ENV

      - name: Send Slack message
        id: slack
        uses: slackapi/slack-github-action@v1.27.1
        with:
          channel-id: "C01UGQ98P9U"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text", "pretext"],
                  "fallback": ${{ toJSON(join(github.event.commits.*.message, '<br>') || ':clock6: Scheduled') }},
                  "color": "${{ env.colour || 'grey' }}",
                  "pretext": "${{ env.icon || ':checkered_flag:' }} ${{ github.workflow }} (${{ github.ref_name }}) #${{ github.run_number }}",
                  "author_name": "${{ github.triggering_actor || github.actor }}",
                  "title": "${{ github.workflow }}",
                  "title_link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": ${{ toJSON(join(github.event.commits.*.message, '\n') || ':clock6: Scheduled') }},
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "In Progress"
                    },
                    {
                      "title": "Start",
                      "short": true,
                      "value": "${{ env.startfmt }}"
                    }
                  ]
                },
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url || github.server_url }}|View commit>"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup python
        uses: actions/setup-python@v6
        with:
          python-version: "3.12"

      - name: Install requests
        run: pip install requests

      - name: Build last-week page
        run: .github/scripts/get_interesting_news.py
        env:
          consumer_key: ${{ secrets.consumer_key }}
          access_token: ${{ secrets.access_token }}
          PGLINKS_KEY: ${{ secrets.PGLINKS_KEY }}

      - name: Commit and push if the documents have changed
        if: github.ref_name == 'master'
        run: |-
          git status _posts
          git config --global user.email "lastweek-bot@pgmac.dev"
          git config --global user.name "lastweek-bot"
          if [ $(git ls-files --others --exclude-standard | wc -l) -gt 0 ]; then
            git add _posts/
            git commit -m "Interesting stuff from last week"
            git push
          fi

      - name: Get end time
        if: always()
        run: |
          echo "end=$(date +%s)" >> $GITHUB_ENV
          echo "endfmt=$(date --iso-8601=minutes)" >> $GITHUB_ENV

      - name: Get runtime difference
        if: always()
        run: echo "timediff=$(( (${{ env.end }} - ${{ env.start }})/60 )) minutes\n$(( (${{ env.end }} - ${{ env.start }})%60 )) seconds" >> $GITHUB_ENV

      - name: On failure
        if: failure()
        run: |
          echo "colour=danger" >> $GITHUB_ENV
          echo "status=Failed" >> $GITHUB_ENV
          echo "icon=ðŸ›‘" >> $GITHUB_ENV

      - name: On cancellation
        if: cancelled()
        run: |
          echo "colour=warning" >> $GITHUB_ENV
          echo "status=Cancelled" >> $GITHUB_ENV
          echo "icon=âš " >> $GITHUB_ENV

      - name: On success
        if: success()
        run: |
          echo "colour=good" >> $GITHUB_ENV
          echo "status=Completed" >> $GITHUB_ENV
          echo "icon=âœ…" >> $GITHUB_ENV
          echo "Check it out at [Last Week](https://pgmac.net.au/last-week/)" >> $GITHUB_STEP_SUMMARY

      - name: Send Slack message
        if: always()
        uses: slackapi/slack-github-action@v1.27.1
        with:
          update-ts: ${{ steps.slack.outputs.ts }}
          channel-id: "C01UGQ98P9U"
          payload: |
            {
              "attachments": [
                {
                  "mrkdwn_in": ["text", "pretext"],
                  "fallback": ${{ toJSON(join(github.event.commits.*.message, '<br>') || ':clock6: Scheduled') }},
                  "color": "${{ env.colour || 'grey' }}",
                  "pretext": "${{ env.icon || '?' }} ${{ github.workflow }} (${{ github.ref_name }}) #${{ github.run_number }}",
                  "author_name": "${{ github.triggering_actor || github.actor }}",
                  "title": "${{ github.workflow }}",
                  "title_link": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}",
                  "text": ${{ toJSON(join(github.event.commits.*.message, '\n') || ':clock6: Scheduled') }},
                  "fields": [
                    {
                      "title": "Status",
                      "short": true,
                      "value": "${{ env.status }}"
                    },
                    {
                      "title": "Start",
                      "short": true,
                      "value": "${{ env.startfmt }}"
                    },
                    {
                      "title": "Run time",
                      "short": true,
                      "value": "${{ env.timediff }}"
                    },
                    {
                      "title": "End",
                      "short": true,
                      "value": "${{ env.endfmt }}"
                    }
                  ]
                },
                {
                  "blocks": [
                    {
                      "type": "section",
                      "text": {
                        "type": "mrkdwn",
                        "text": "<${{ github.event.pull_request.html_url || github.event.head_commit.url || github.server_url }}|View commit>"
                      }
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
